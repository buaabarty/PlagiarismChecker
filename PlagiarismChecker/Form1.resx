<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>